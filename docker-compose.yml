# Bring up all the pieces necessary to run the workbench
# Data persists in Docker volumes and in local dir

# This file passes through all necessary env variables to requisite
# Docker containers and makes them available when running commands via
# `docker exec`.

version: '3.4'

services:
  autoscrape_database:
    image: postgres:10.4
    environment:
      POSTGRES_USER: cjworkbench
      POSTGRES_PASSWORD: cjworkbench
      POSTGRES_DB: cjworkbench
      PGDATA: /var/lib/postgresql/data/10.4
    networks: [ 'cjworkbench_dev' ]
    volumes:
      - dbdata:/var/lib/postgresql/data

  autoscrape_rabbitmq:
    image: rabbitmq:3.7.8-management
    ports: [ '15672' ] # open management port, for debugging
    networks: [ 'cjworkbench_dev' ]
    environment:
      # Use just one CPU
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: '+S 1:1 +stbt ts +A 12'

  autoscrape_flask:
    build:
      context: .
      target: base
    volumes:
      - ./:/app:rw
      - virtualenvs:/root/.local/share/virtualenvs/:rw
    command: [ 'pipenv', 'run', 'python3', 'autoscrape-server.py' ]
    ports:
      - '5000:5001'
    links:
      - autoscrape_rabbitmq
    depends_on: [ 'autoscrape_rabbitmq', 'autoscrape_database' ]
    networks: [ 'cjworkbench_dev' ]
    environment:
      CJW_RABBITMQ_HOST: amqp://guest:guest@autoscrape_rabbitmq/
      CJW_DB_HOST: autoscrape_database
      CJW_DB_USER: cjworkbench
      CJW_DB_PASSWORD: cjworkbench

  autoscrape_celery:
    build:
      context: .
      target: base
    volumes:
      - ./:/app:rw
      - virtualenvs:/root/.local/share/virtualenvs/:rw
    command: [ 'pipenv', 'run', 'celery', '-A', 'autoscrape.tasks', 'worker', '--loglevel=info' ]
    #user: nobody
    links:
      - autoscrape_rabbitmq
    depends_on: [ 'autoscrape_rabbitmq', 'autoscrape_flask' ]
    networks: [ 'cjworkbench_dev' ]
    environment:
      CJW_RABBITMQ_HOST: amqp://guest:guest@autoscrape_rabbitmq/

networks:
  cjworkbench_dev:
    driver: bridge
    external: true

volumes:
  virtualenvs: {}
  dbdata: {}

